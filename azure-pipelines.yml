# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master
- release/*

pool:
  vmImage: 'vs2017-win2016'

variables:
  buildConfiguration: 'Release'
  major: 0
  minor: 1
  patch: 3
  version: '$(major).$(minor).$(patch)-build.$(Build.BuildNumber)'

steps:
- task: DotNetCoreInstaller@0
  inputs:
    version: '2.2.101'

- script: |
    dotnet build --configuration $(buildConfiguration)
    dotnet test tests --configuration $(buildConfiguration) --logger trx

- task: PublishTestResults@2
  condition: succeededOrFailed()
  inputs:
    testRunner: VSTest
    testResultsFiles: '**/*.trx'

#- task: NuGetCommand@2
#  displayName: 'NugetPackagePack'
#  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'))
#  inputs:
#    command: 'pack'
#    versioningScheme: 'ByEnvVar'
#    versionEnvVar: 'version'
#    configuration: '$(buildConfiguration)'
#    packDestination: '$(Build.ArtifactStagingDirectory)'

- script:
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'))
    dotnet pack /p:PackageVersion=$(version) --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory) --no-build --no-restore

- task: PublishBuildArtifacts@1
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'))

- task: NuGetCommand@2
  displayName: 'NugetPackagePush'
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'))
  inputs:
    command: 'push'
    feedsToUse: 'select'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'Azure Devops'
    versioningScheme: 'off'